{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.34.60546",
      "templateHash": "6909208327818699763"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location of the resources"
      }
    },
    "sqlAdminPassword": {
      "type": "string",
      "defaultValue": "g@G9@2nD7C1BP%uh",
      "metadata": {
        "description": "Password for the SQL Server admin user. PLEASE CHANGE THIS BEFORE DEPLOYMENT!"
      }
    },
    "deployments": {
      "type": "array",
      "defaultValue": [
        {
          "name": "gpt-4o",
          "capacity": 40,
          "version": "2024-05-13"
        },
        {
          "name": "text-embedding-ada-002",
          "capacity": 120,
          "version": "2"
        }
      ],
      "metadata": {
        "description": "Model deployments for OpenAI"
      }
    },
    "restore": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Restore the service instead of creating a new instance. This is useful if you previously soft-deleted the service and want to restore it. If you are restoring a service, set this to true. Otherwise, leave this as false."
      }
    },
    "apimPublisherEmail": {
      "type": "string",
      "defaultValue": "support@contososuites.com",
      "minLength": 1,
      "metadata": {
        "description": "The email address of the owner of the service"
      }
    }
  },
  "variables": {
    "apiManagementServiceName": "[format('apim-{0}', uniqueString(resourceGroup().id))]",
    "apimSku": "Basicv2",
    "apimSkuCount": 1,
    "apimPublisherName": "Contoso Suites",
    "cosmosDbName": "[format('{0}-cosmosdb', uniqueString(resourceGroup().id))]",
    "cosmosDbDatabaseName": "ContosoSuites",
    "storageAccountName": "[format('{0}sa', uniqueString(resourceGroup().id))]",
    "searchServiceName": "[format('{0}-search', uniqueString(resourceGroup().id))]",
    "openAIName": "[format('{0}-openai', uniqueString(resourceGroup().id))]",
    "speechServiceName": "[format('{0}-speech', uniqueString(resourceGroup().id))]",
    "languageServiceName": "[format('{0}-lang', uniqueString(resourceGroup().id))]",
    "webAppNameApi": "[format('{0}-api', uniqueString(resourceGroup().id))]",
    "webAppNameDash": "[format('{0}-dash', uniqueString(resourceGroup().id))]",
    "appServicePlanName": "[format('{0}-cosu-asp', uniqueString(resourceGroup().id))]",
    "functionAppName": "[format('{0}-cosu-fn', uniqueString(resourceGroup().id))]",
    "functionAppServicePlanName": "[format('{0}-cosu-fn-asp', uniqueString(resourceGroup().id))]",
    "logAnalyticsName": "[format('{0}-cosu-la', uniqueString(resourceGroup().id))]",
    "appInsightsName": "[format('{0}-cosu-ai', uniqueString(resourceGroup().id))]",
    "webAppSku": "S1",
    "registryName": "[format('{0}cosureg', uniqueString(resourceGroup().id))]",
    "registrySku": "Standard",
    "sqlServerName": "[format('{0}-sqlserver', uniqueString(resourceGroup().id))]",
    "sqlDatabaseName": "ContosoSuitesBookings",
    "sqlAdminUsername": "contosoadmin",
    "locations": [
      {
        "locationName": "[parameters('location')]",
        "failoverPriority": 0,
        "isZoneRedundant": false
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[variables('cosmosDbName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "databaseAccountOfferType": "Standard",
        "locations": "[variables('locations')]",
        "disableLocalAuth": false
      },
      "metadata": {
        "description": "Creates an Azure Cosmos DB NoSQL account."
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}', variables('cosmosDbName'), variables('cosmosDbDatabaseName'))]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDbDatabaseName')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName'))]"
      ],
      "metadata": {
        "description": "Creates an Azure Cosmos DB NoSQL API database."
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2021-11-01",
      "name": "[variables('sqlServerName')]",
      "location": "[parameters('location')]",
      "properties": {
        "administratorLogin": "[variables('sqlAdminUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdminPassword')]"
      },
      "metadata": {
        "description": "Creates an Azure SQL Server."
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2021-11-01",
      "name": "[format('{0}/{1}', variables('sqlServerName'), variables('sqlDatabaseName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS"
      },
      "sku": {
        "name": "S2",
        "tier": "Standard",
        "capacity": 50
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ],
      "metadata": {
        "description": "Creates an Azure SQL Database."
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      },
      "metadata": {
        "description": "Creates an Azure Storage account."
      }
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2023-11-01",
      "name": "[variables('searchServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "standard"
      },
      "metadata": {
        "description": "Creates an Azure AI Search service."
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('openAIName')]",
      "location": "[parameters('location')]",
      "kind": "OpenAI",
      "sku": {
        "name": "S0",
        "tier": "Standard"
      },
      "properties": {
        "customSubDomainName": "[variables('openAIName')]",
        "publicNetworkAccess": "Enabled",
        "restore": "[parameters('restore')]"
      },
      "metadata": {
        "description": "Creates an Azure OpenAI resource."
      }
    },
    {
      "copy": {
        "name": "deployment",
        "count": "[length(parameters('deployments'))]",
        "mode": "serial",
        "batchSize": 1
      },
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', variables('openAIName'), parameters('deployments')[copyIndex()].name)]",
      "sku": {
        "name": "Standard",
        "capacity": "[parameters('deployments')[copyIndex()].capacity]"
      },
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "[parameters('deployments')[copyIndex()].name]",
          "version": "[parameters('deployments')[copyIndex()].version]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAIName'))]"
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('speechServiceName')]",
      "location": "[parameters('location')]",
      "kind": "SpeechServices",
      "sku": {
        "name": "S0"
      },
      "properties": {
        "customSubDomainName": "[variables('speechServiceName')]",
        "publicNetworkAccess": "Enabled",
        "restore": "[parameters('restore')]"
      },
      "metadata": {
        "description": "Creates an Azure AI Services Speech service."
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('languageServiceName')]",
      "location": "[parameters('location')]",
      "kind": "TextAnalytics",
      "sku": {
        "name": "S"
      },
      "properties": {
        "customSubDomainName": "[variables('languageServiceName')]",
        "publicNetworkAccess": "Enabled",
        "restore": "[parameters('restore')]"
      },
      "metadata": {
        "description": "Creates an Azure AI Services Language service."
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[variables('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 90,
        "workspaceCapping": {
          "dailyQuotaGb": 1
        }
      },
      "metadata": {
        "description": "Creates an Azure Log Analytics workspace."
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      ],
      "metadata": {
        "description": "Creates an Azure Application Insights resource."
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2022-12-01",
      "name": "[variables('registryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('registrySku')]"
      },
      "properties": {
        "adminUserEnabled": true
      },
      "metadata": {
        "description": "Creates an Azure Container Registry."
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "kind": "linux",
      "properties": {
        "reserved": true
      },
      "sku": {
        "name": "[variables('webAppSku')]"
      },
      "metadata": {
        "description": "Creates an Azure App Service Plan."
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('webAppNameApi')]",
      "location": "[parameters('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "clientAffinityEnabled": false,
        "siteConfig": {
          "linuxFxVersion": "[format('DOCKER|{0}.azurecr.io/{1}/techexcel/csapi', variables('registryName'), uniqueString(resourceGroup().id))]",
          "http20Enabled": true,
          "minTlsVersion": "1.2",
          "appCommandLine": "",
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[format('https://{0}.azurecr.io', variables('registryName'))]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[variables('registryName')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', variables('registryName')), '2022-12-01').passwords[0].value]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02-preview').InstrumentationKey]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.ContainerRegistry/registries', variables('registryName'))]"
      ],
      "metadata": {
        "description": "Creates an Azure App Service for the API."
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('webAppNameDash')]",
      "location": "[parameters('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "clientAffinityEnabled": false,
        "siteConfig": {
          "linuxFxVersion": "[format('DOCKER|{0}.azurecr.io/{1}/techexcel/csdash', variables('registryName'), uniqueString(resourceGroup().id))]",
          "http20Enabled": true,
          "minTlsVersion": "1.2",
          "appCommandLine": "",
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[format('https://{0}.azurecr.io', variables('registryName'))]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[variables('registryName')]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', variables('registryName')), '2022-12-01').passwords[0].value]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02-preview').InstrumentationKey]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.ContainerRegistry/registries', variables('registryName'))]"
      ],
      "metadata": {
        "description": "Creates an Azure App Service for the Dashboard."
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[variables('functionAppServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionAppServicePlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_USE_PLACEHOLDER_DOTNETISOLATED",
              "value": "1"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02-preview').ConnectionString]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet-isolated"
            }
          ],
          "ftpsState": "FtpsOnly",
          "minTlsVersion": "1.2",
          "netFrameworkVersion": "v8.0"
        },
        "httpsOnly": true,
        "virtualNetworkSubnetId": null,
        "publicNetworkAccess": "Enabled",
        "clientAffinityEnabled": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('functionAppServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2023-09-01-preview",
      "name": "[variables('apiManagementServiceName')]",
      "location": "norwayeast",
      "sku": {
        "name": "[variables('apimSku')]",
        "capacity": "[variables('apimSkuCount')]"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "publisherEmail": "[parameters('apimPublisherEmail')]",
        "publisherName": "[variables('apimPublisherName')]",
        "restore": "[parameters('restore')]"
      }
    }
  ],
  "outputs": {
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName')), '2023-04-15').documentEndpoint]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "searchServiceName": {
      "type": "string",
      "value": "[variables('searchServiceName')]"
    },
    "openAIEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('openAIName')), '2023-05-01').endpoint]"
    },
    "speechServiceName": {
      "type": "string",
      "value": "[variables('speechServiceName')]"
    },
    "application_name": {
      "type": "string",
      "value": "[variables('webAppNameApi')]"
    },
    "application_url": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('webAppNameApi')), '2022-09-01').hostNames[0]]"
    },
    "container_registry_name": {
      "type": "string",
      "value": "[variables('registryName')]"
    },
    "application_name_dash": {
      "type": "string",
      "value": "[variables('webAppNameDash')]"
    },
    "application_url_dash": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('webAppNameDash')), '2022-09-01').hostNames[0]]"
    },
    "function_app_name": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    },
    "apiManagementServiceName": {
      "type": "string",
      "value": "[variables('apiManagementServiceName')]"
    }
  }
}